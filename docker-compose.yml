version: '3'
services:

  zookeeper-service:
    container_name: zookeeper
    image: quay.io/debezium/zookeeper:2.3
    ports:
      - ${ZOOKEEPER_PORT}:2181

  kafka-service:
    container_name: kafka
    image: quay.io/debezium/kafka:2.3
    depends_on:
      - zookeeper-service
    ports:
      - ${KAFKA_PORT}:9092
    environment:
      ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: "LISTENER_INT://kafka:29092, LISTENER_EXT://0.0.0.0:9092"
      KAFKA_ADVERTISED_LISTENERS: "LISTENER_INT://kafka:29092, LISTENER_EXT://localhost:9092"
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: "LISTENER_INT:PLAINTEXT, LISTENER_EXT:PLAINTEXT"
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_INT

  postgres-database:
    container_name: unreal-postgres
    image: quay.io/debezium/postgres:14
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  kafka-connector-service:
    container_name: kafka-connector
    image: kafka-connector:latest
    build: debezium-with-postgres
    ports:
      - ${KAFKA_CONNECTOR_PORT}:8083
    environment:
      BOOTSTRAP_SERVERS: kafka:29092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: my_connect_configs
      OFFSET_STORAGE_TOPIC: my_connect_offsets
      STATUS_STORAGE_TOPIC: my_connect_statuses
    depends_on:
      - kafka-service
      - postgres-database
    healthcheck:
      test: [ "CMD", "curl", "-I", "http://kafka-connector:8083" ]
      interval: 10s
      timeout: 5s
      retries: 10

  kafdrop-service:
    container_name: kafdrop
    image: obsidiandynamics/kafdrop:latest
    depends_on:
      - kafka-service
    ports:
      - ${KAFDROP_PORT}:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

#  kafka-consumer-service:
#    image: kafka-consumer-service:latest
#    container_name: kafka-consumer-service
#    build: kafka-consumer-service
#    environment:
#      DATASOURCE_URL: jdbc:postgresql://unreal-postgres:5432/unreal_db
#      KAFKA_PORT: kafka:9092
#    depends_on:
#      - postgres-database

  terraform-service:
    image: terraform-service:latest
    container_name: terraform-service
    build: terraform
    depends_on:
      kafka-connector-service:
        condition: service_healthy

